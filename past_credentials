#!/bin/bash

# Function to print error messages
error() {
    echo "Error: $1" >&2
    exit 1
}

# Function to paste the provided argument using the clipboard
paste_sequence() {
    # Copy the credential to the clipboard
    echo -n "$1" | xclip -selection clipboard

    # Wait briefly to ensure the clipboard is updated
    sleep 0.2

    # Simulate Ctrl+V to paste the clipboard contents
    xdotool key --clearmodifiers ctrl+v

    # Wait briefly to ensure the paste operation completes
    sleep 0.2

    # Clear the clipboard for security
    echo -n "" | xclip -selection clipboard
}

# Function to check if a credential is set
check_credential() {
    local credential_name="$1"
    local credential_value="$2"
    if [ -z "$credential_value" ]; then
        error "$credential_name is not set in the credentials file"
    fi
}

# Main function
main() {
    # Ensure exactly one argument is provided
    if [ "$#" -ne 1 ]; then
        error "Usage: $0 <work_password | work_email | vpn_password | linkedin_profile | github_profile>"
    fi

    scripts_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    if [ -f "$scripts_path"/.credentials ]; then
        # shellcheck disable=SC1091
        source "$scripts_path"/.credentials
    fi

    # Convert argument to lowercase to handle case-insensitive input
    arg="$(echo "$1" | tr '[:upper:]' '[:lower:]')"

    # Determine which credential to paste based on the argument
    case "$arg" in
        work_password)
            check_credential "WORK_PASSWORD" "$WORK_PASSWORD"
            paste_sequence "$WORK_PASSWORD"
            ;;
        work_email)
            check_credential "WORK_EMAIL" "$WORK_EMAIL"
            paste_sequence "$WORK_EMAIL"
            ;;
        vpn_password)
            check_credential "VPN_PASSWORD" "$VPN_PASSWORD"
            paste_sequence "$VPN_PASSWORD"
            ;;
        linkedin_profile)
            check_credential "LINKEDIN_PROFILE" "$LINKEDIN_PROFILE"
            paste_sequence "$LINKEDIN_PROFILE"
            ;;
        github_profile)
            check_credential "GITHUB_PROFILE" "$GITHUB_PROFILE"
            paste_sequence "$GITHUB_PROFILE"
            ;;
        *)
            error "Invalid argument. Allowed arguments: work_password, work_email, vpn_password, linkedin_profile, github_profile"
            ;;
    esac
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
