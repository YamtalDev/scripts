#!/bin/bash
# Script to add, commit, and push changes in a git repository

# Function to check if the current directory is a git repository
check_git_repository() {
    if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
        echo "Error: Not inside a git repository."
        return 1
    fi
}

# Function to check if a commit message is provided
check_commit_message() {
    if [ -z "$1" ]; then
        echo "Error: Commit message is required."
        return 1
    fi
}

# Function to stage all changes
stage_all_changes() {
    if ! output=$(git add . 2>&1); then
        echo "Error: Could not stage changes."
        echo "$output"
        return 1
    fi
}

# Function to check if there are any staged changes
check_staged_changes() {
    if git diff --cached --quiet; then
        echo "No changes to commit."
        return 1
    fi
}

# Function to commit changes with the provided message
commit_changes() {
    local commit_message="$1"
    if ! output=$(git commit -m "$commit_message" 2>&1); then
        echo "Error: Could not commit changes."
        echo "$output"
        return 1
    fi
}

# Function to check if the local branch is up-to-date with the remote branch
check_if_up_to_date() {
    local current_branch
    current_branch=$(git symbolic-ref --short HEAD)

    if ! output=$(git fetch origin "$current_branch" 2>&1); then
        echo "Error: Could not fetch updates."
        echo "$output"
        return 1
    fi

    local local_hash
    local remote_hash
    local base_hash

    local_hash=$(git rev-parse "$current_branch")
    remote_hash=$(git rev-parse "origin/$current_branch")
    base_hash=$(git merge-base "$current_branch" "origin/$current_branch")

    if [ "$local_hash" = "$remote_hash" ]; then
        echo "Branch is already up-to-date with the remote."
        return 1
    elif [ "$local_hash" = "$base_hash" ]; then
        echo "Need to pull changes before pushing."
        return 1
    fi
}

# Function to push to the current branch
push_to_current_branch() {
    local current_branch
    current_branch=$(git symbolic-ref --short HEAD)
    if ! output=$(git push origin "$current_branch" 2>&1); then
        echo "Error: Could not push changes."
        echo "$output"
        return 1
    fi
}

# Main function to handle the gitup functionality
gitup() {
    check_git_repository || return 1
    check_commit_message "$1" || return 1

    stage_all_changes || return 1
    check_staged_changes || return 1

    commit_changes "$1" || return 1
    check_if_up_to_date || return 1

    push_to_current_branch || return 1
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    gitup "$@"
fi
